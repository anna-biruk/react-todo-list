[{"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\index.js":"1","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\App.js":"2","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\serviceWorker.js":"3","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\app\\store.js":"4","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\counter\\Counter.js":"5","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolist.js":"7","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolistItem.js":"8","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolistSlice.js":"9","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\theme.js":"10","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\i18n.js":"11","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\language.js":"12","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\summary.js":"13"},{"size":847,"mtime":1608630699579,"results":"14","hashOfConfig":"15"},{"size":330,"mtime":1606995757653,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":209,"mtime":1607683540277,"results":"18","hashOfConfig":"15"},{"size":1626,"mtime":499162500000,"results":"19","hashOfConfig":"15"},{"size":1813,"mtime":1607683308497,"results":"20","hashOfConfig":"15"},{"size":4795,"mtime":1608805740282,"results":"21","hashOfConfig":"15"},{"size":6307,"mtime":1609086996752,"results":"22","hashOfConfig":"15"},{"size":6282,"mtime":1609080768414,"results":"23","hashOfConfig":"15"},{"size":1695,"mtime":1609084763336,"results":"24","hashOfConfig":"15"},{"size":1148,"mtime":1609086429344,"results":"25","hashOfConfig":"15"},{"size":793,"mtime":1608640744020,"results":"26","hashOfConfig":"15"},{"size":3749,"mtime":1609089563836,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"t2rc8t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\index.js",[],["59","60"],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\App.js",["61","62"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport {Counter} from './features/counter/Counter';\r\nimport './App.css';\r\nimport {Todolist} from \"./features/todolist/todolist\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\serviceWorker.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\app\\store.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\counter\\Counter.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\counter\\counterSlice.js",[],["63","64"],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolist.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolistItem.js",["65","66","67"],"import React, {useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useDispatch} from \"react-redux\";\r\nimport clsx from 'clsx';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n    deleteTodolistItem,\r\n    getCheckedItems,\r\n    handleToggle,\r\n    toggleItemEditing,\r\n    updateTodolistItems\r\n} from \"./todolistSlice\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {ReactComponent as High} from \"../../assets/icons/high.svg\";\r\nimport {ReactComponent as Low} from \"../../assets/icons/low.svg\";\r\nimport {ReactComponent as Medium} from \"../../assets/icons/medium.svg\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        maxWidth: 1600,\r\n    },\r\n    listItemContainer: {\r\n        width: 350,\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    crossedOut: {\r\n        textDecoration: 'line-through'\r\n    },\r\n    formSubmit: {\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: 125,\r\n        marginLeft: 'auto !important'\r\n\r\n    },\r\n    actions: {\r\n        display: 'contents'\r\n    }\r\n\r\n\r\n}));\r\n\r\nexport function TodolistItem({item}) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(item.name);\r\n    const [importance, setImportance] = useState(item.importance);\r\n\r\n\r\n    const handleNameChange = event => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const handleCheckedImportance = event => {\r\n        setImportance(Number.parseInt(event.target.value))\r\n    };\r\n\r\n    const handleSaveClick = id => (e) => {\r\n        e.preventDefault();\r\n        dispatch(toggleItemEditing(id));\r\n        dispatch(updateTodolistItems({id, name, isEditing: false, importance}))\r\n    };\r\n    const handleDeleteItem = id => () => {\r\n        dispatch(deleteTodolistItem({id}))\r\n    };\r\n    const handleCheckedItem = id => () => {\r\n        dispatch(handleToggle({id, isChecked: !item.isChecked}));\r\n        dispatch(updateTodolistItems({id, isChecked: !item.isChecked}));\r\n        setTimeout(() => {\r\n            dispatch(getCheckedItems());\r\n        }, 500)\r\n    };\r\n\r\n    let date = dayjs(item.createdAt).format('MMM D, YYYY  HH:mm');\r\n    const {t} = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            <List className={classes.root}>\r\n                <ListItem className={classes.listItemContainer}>\r\n                    <ListItemIcon>\r\n                        <Checkbox\r\n                            onClick={handleCheckedItem(item.id)}\r\n                            checked={item.isChecked}\r\n                            color='primary'\r\n\r\n                        />\r\n                    </ListItemIcon>\r\n\r\n                    {!item.isEditing ? (\r\n                        <>\r\n                            <ListItemText primary={item.name} className={clsx({\r\n                                [classes.crossedOut]: item.isChecked\r\n                            })} secondary={date}/>\r\n                            <ListItemSecondaryAction className={classes.actions}>\r\n                                {\r\n                                    importance === 1 && (\r\n                                        <High width={30} height={30}/>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    importance === 2 && (\r\n                                        <Medium width={30} height={30}/>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    importance === 3 && (\r\n                                        <Low width={30} height={30}/>\r\n                                    )\r\n                                }\r\n                                <IconButton edge=\"end\" aria-label=\"edit\">\r\n                                    <EditIcon onClick={handleSaveClick(item.id)}/>\r\n                                </IconButton>\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <ClearIcon onClick={handleDeleteItem(item.id)}/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </>\r\n                    ) : (\r\n                        <form className={classes.formSubmit} onSubmit={handleSaveClick(item.id)}>\r\n                            <TextField autoComplete='on' value={name} onChange={handleNameChange}/>\r\n                            <FormControl className={classes.formControl}>\r\n                                <Select native defaultValue={2} value={importance} onChange={handleCheckedImportance}>\r\n                                    <option value={1}>{t('High')}</option>\r\n                                    <option value={2}>{t('Medium')}</option>\r\n                                    <option value={3}>{t('Low')}</option>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <IconButton type=\"submit\" autoComplete='on' edge=\"end\">\r\n                                <CheckIcon/>\r\n                            </IconButton>\r\n                        </form>\r\n                    )}\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n}","C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\todolistSlice.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\theme.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\i18n.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\language.js",[],"C:\\Users\\guest-01\\Desktop\\test todolist\\test3\\todolist_3\\src\\features\\todolist\\summary.js",["68"],"import React, {useEffect} from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Chart} from \"react-google-charts\";\r\nimport {\r\n    getCheckedItems,\r\n    selectCheckedCount,\r\n    selectOverallCount,\r\n    selectUncompletedCount\r\n} from \"./todolistSlice\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: 25,\r\n        marginLeft: 70,\r\n        display: 'flex',\r\n    },\r\n\r\n}));\r\nconst pieOptions = {\r\n    title: \"\",\r\n    pieHole: 0.6,\r\n    slices: [\r\n        {\r\n            color: \"#2BB673\"\r\n        },\r\n        {\r\n            color: \"#d91e48\"\r\n        },\r\n        {\r\n            color: \"#007fad\"\r\n        },\r\n        {\r\n            color: \"#e9a227\"\r\n        }\r\n    ],\r\n    legend: {\r\n        position: \"bottom\",\r\n        alignment: \"center\",\r\n        textStyle: {\r\n            color: \"#000000\",\r\n            fontSize: 14\r\n        }\r\n    },\r\n    tooltip: {\r\n        showColorCode: true\r\n    },\r\n    chartArea: {\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"80%\"\r\n    },\r\n    fontName: \"Roboto\"\r\n};\r\n\r\n\r\nexport function SummaryForm({item}) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const checkedCount = useSelector(selectCheckedCount);\r\n    const uncompletedCount = useSelector(selectUncompletedCount);\r\n    const overallCount = useSelector(selectOverallCount);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCheckedItems())\r\n    }, [dispatch]);\r\n\r\n    const {t} = useTranslation();\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <div className={classes.checkedItem}>\r\n                <ListItem>\r\n                    <ListItemText primary={<div>{t('Completed')}: {checkedCount}</div>}/>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary={<div>{t('Uncompleted')}: {uncompletedCount}</div>}/>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary={<div>{t('Overall')}: {overallCount}</div>}/>\r\n                </ListItem>\r\n            </div>\r\n            <div>\r\n                <Chart\r\n                    width={'230px'}\r\n                    height={'230px'}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    options={{\r\n                        legend: 'none',\r\n                        pieSliceText: 'label',\r\n                        backgroundColor: 'transparent',\r\n                        slices: [\r\n\r\n                            {\r\n                                color: '#996ad3'\r\n                            },\r\n                            {\r\n                                color: \"#d91e48\"\r\n                            },\r\n                            {\r\n                                color: \"#e9a227\"\r\n                            }\r\n                        ],\r\n                        tooltip: {\r\n                            showColorCode: true\r\n                        },\r\n                    }}\r\n                    data={[\r\n                        ['Status', 'Items'],\r\n                        [t('Completed'), Number.parseInt(checkedCount)],\r\n                        [t('Uncompleted'), Number.parseInt(uncompletedCount)],\r\n                    ]}\r\n                    rootProps={{'data-testid': '1'}}\r\n                />\r\n            </div>\r\n        </List>\r\n    )\r\n\r\n\r\n}",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"69","replacedBy":"78"},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","severity":1,"message":"80","line":26,"column":8,"nodeType":"75","messageId":"76","endLine":26,"endColumn":16},{"ruleId":"73","severity":1,"message":"81","line":27,"column":8,"nodeType":"75","messageId":"76","endLine":27,"endColumn":22},{"ruleId":"73","severity":1,"message":"82","line":28,"column":8,"nodeType":"75","messageId":"76","endLine":28,"endColumn":18},{"ruleId":"73","severity":1,"message":"83","line":27,"column":7,"nodeType":"75","messageId":"76","endLine":27,"endColumn":17},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.",["84"],["85"],"'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'pieOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]